1) сделать синхронизацию сцены
    по всем каналам  WS , SSE(Post для отправки), LP

1.1) прием сигнала на "СБРОС" кубиков
1.2) отправка на WORD-API, получение от него
1.3) Рассылка всем подписчикам сигнала от WORD-API

2.1) Прием сигнала на "ОЧИСТКУ" сцены
2.2) Рассылка всем подписчикам сигнала на "ОЧИСТКУ"

3.1) Прием сигнала на "ВЫДЕЛЕНИЕ" кубика (по cideId)
3.2) Рассылка всем подписчикам сигнала на "ВЫДЕЛЕНИЕ"


Удаление SSE-подписчиков при разрыве соединения
Текущий код просто пушит подписчика в вектор, но не удаляет при закрытии. Это может привести к утечкам памяти.
Решение — использовать tokio::sync::broadcast или tokio_util::sync::CancellationToken или добавить механизм keep-alive/ping, чтобы детектить отключение.


Аутентификация пользователей
Группы / комнаты — добавь параметр "room_id" и разошли сообщения только участникам комнаты.
Поддержка JSON-сообщений


Блокировки (Mutex)
В коде используется std::sync::Mutex, что может блокировать текущий поток. Так как ты используешь tokio, лучше заменить на tokio::sync::Mutex


Статистика подписчиков
Можно добавить эндпоинт /stats, который возвращает количество подписчиков каждого типа: